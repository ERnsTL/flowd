# example network testing storage and retrieval of blob values
# run using:
##!/bin/bash
#echo -n "Create storage directories..."
#mkdir -p /tmp/blob-data/ && mkdir -p /tmp/blob-tmp/ && echo OK || echo FAIL
#bin/flowd src/github.com/ERnsTL/flowd/examples/blobstore/blobstore-test-put-get.fbp

# define and configure players
'blob-name=sensor1.temperature.value' -> CONF SetBlobName(bin/header-modify)
'/tmp/blob-data,/tmp/blob-tmp,careful' -> CONF Saver(bin/blobstore-put)
'/tmp/blob-data,careful' -> CONF Retriever(bin/blobstore-get)

# send some blob downstream to be saved
'MYBLOB' -> IN SetBlobName OUT -> IN Saver
SetBlobName OUT -> IN Saver

# ...and be retrieved some short time later
'10s' -> CONF RetrieveSleeper(bin/sleep)
'sensor1.temperature.value' -> IN RetrieveSleeper OUT -> IN Retriever

# ...and display what was retrieved as NETOUT
Retriever OUT -> IN Display(bin/display)

# for configurable input instead of from IIP, it is possible to attach any other component,
# for example file-read or some other data generator, or also unix-server or tcp-server
# and send data in manually using for example:
# echo "MYBLOB" | bin/stdin2frame -bodytype DataMessage -content-type text/plain | bin/stdin2unix @flowd/network1/in
# where @flowd/network1/in could be the listening address of a unix-server component
